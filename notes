// the array-less define call makes it so you can require stuff.
// if you put in an array and put require as a dep, it get's screwy.
define(function(require){
  var Backbone = require('backbone'),
    literallyAnything = require('handlebars');
});

// example main.js
// jquery does not be to individually loaded. You can simply use $
requirejs.config({
  baseUrl: '../app',
  paths: {
    require: 'lib/require',
    jquery: 'lib/jquery',
    underscore: 'lib/underscore',
    backbone: 'lib/backbone',
    handlebars: 'lib/handlebars',
    bootstrap: 'lib/bootstrap'
  },
  shim: {
    'handlebars': {
      'exports': 'Handlebars'
    },
    'bootstrap': {
      deps: ['jquery']
    }
  }
});

require(['bt-app']);



// Bootstrap in a few notes (bt-app.js)

var note1 = new NoteModel({
  x: 100,
  y: 100,
  width: 300,
  height: 200,
  color: 'crimson',
  content: 'The first note'
});
var note2 = new NoteModel({
  x: 500,
  y: 100,
  width: 200,
  height: 300,
  color: 'skyblue',
  content: 'The second note'
});

notesCollection.add([
  note1,
  note2
]);

notesCollection.sync('create', note1, {success: function(){console.log('success')}});
notesCollection.sync('create', note2, {success: function(){console.log('success')}});





/*
  All 3 of these do slightly different things:
*/

//1 -> triggers a destroy event
noteModel.destroy({
  success: function() {
    console.log('destroyed model');
  },
  failure: function() {
    console.log('failed to destroy model');
  }
})

//2 -> doesn't destroy it
this.collection.remove(noteModel);

//3 -> deletes, but doesn't cause event. basically, manually calling stuff done in destroy()
self.collection.sync('update', noteModel, {
  success: function(){
    console.log('saved position');
  },
  failure: function(){
    console.log('failed to save position');
  }
});